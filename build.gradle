
plugins {
    id "org.jetbrains.intellij" version "1.13.2"
}

repositories {
    mavenLocal()
    mavenCentral()
	flatDir {
	    dirs buildDir
	}
    maven { url 'https://jitpack.io' }
    maven {
        url 'https://maven.pkg.github.com/RHEcosystemAppEng/crda-java-api'
        credentials {
            username = project.findProperty("gpr.username") ?: System.getenv("GITHUB_USERNAME")
            password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
        }
    }
    maven {
        url 'https://repository.jboss.org/nexus/content/repositories/snapshots'
    }
    maven {
        url 'https://repository.jboss.org/nexus/content/groups/public'
    }
    maven {
        url 'https://packages.jetbrains.team/maven/p/ij/intellij-dependencies'
    }
}

apply plugin: 'idea'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'java'
apply plugin: 'jacoco'

sourceCompatibility = '11'
targetCompatibility = '11'

intellij {
    version = ideaVersion //for a full list of IntelliJ IDEA releases please see https://www.jetbrains.com/intellij-repository/releases
    pluginName = 'org.jboss.tools.intellij.analytics'
    plugins = ['com.redhat.devtools.intellij.telemetry:0.0.3.33']
    updateSinceUntilBuild = false
}

runPluginVerifier {
    ideVersions = [ideaVersion]
}

publishPlugin {
    token    = jetBrainsToken
    channels = [jetBrainsChannel]
}

dependencies {
    configurations.all {
        // this means SNAPSHOT versions will be updated for every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    // WATCH OUT - lsp4intellij version 0.95.1 breaks diagnostics for opened files
    implementation 'com.github.ballerina-platform:lsp4intellij:0.95.0'
    constraints {
        implementation('com.google.guava:guava:30.0-jre') {
            because 'version 27.1-jre introduced by lsp4intellij:0.95.0 reports vulnerabilities'
        }
        implementation('com.google.code.gson:gson:2.8.9') {
            because 'version 2.8.2 introduced by lsp4intellij:0.95.0 reports vulnerabilities'
        }
    }
    implementation 'org.kohsuke:github-api:1.314'
    implementation 'org.apache.commons:commons-compress:1.21'
    implementation 'com.redhat.crda:crda-java-api:0.0.1-SNAPSHOT'
    testImplementation('junit:junit:4.13.1')
    implementation 'com.redhat.devtools.intellij:intellij-common-ui-test-library:0.2.0'
}

runIde {
    systemProperties['com.redhat.devtools.intellij.telemetry.mode'] = 'debug'
}

runIdeForUiTests {
    systemProperties['com.redhat.devtools.intellij.telemetry.mode'] = 'debug'
}

sourceSets {
    integrationTest {
        java.srcDir file('src/it/java')
        resources.srcDir file('src/it/resources')
        compileClasspath += sourceSets.main.output + configurations.runtimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform()
    description = 'Runs the integration tests.'
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
    mustRunAfter test
}

group 'org.jboss.tools.intellij'
version projectVersion // Plugin version
