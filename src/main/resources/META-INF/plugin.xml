<idea-plugin>
    <id>org.jboss.tools.intellij.analytics</id>
    <name>Red Hat Dependency Analytics</name>
    <version>0.7.0</version>
    <vendor email="developers@redhat.com" url="https://www.redhat.com">Red-Hat</vendor>

    <description><![CDATA[
      <img src="https://raw.githubusercontent.com/redhat-developer/intellij-dependency-analytics/main/src/main/resources/images/trusted_content_icon.png"
     width="32" height="32"/>

<h2>Overview</h2>
<p>
    Red Hat Dependency Analytics (RHDA) plugin gives you awareness to security concerns within your software supply
    chain while you build your application.
    <br>The Dependency Analytics plugin uses the Snyk REST API to query <a href="https://snyk.io/product/vulnerability-database/"
                                                    rel="noopener noreferrer" target="_blank">Snyk's Vulnerability
    Database</a> for the most up-to-date vulnerability information available.
    <br>Snyk uses industry-leading security intelligence by pulling from many data sources to give you exact vulnerability information.

<p>
    <b>NOTE:</b>
    <br>The Red Hat Dependency Analytics plugin is an online service hosted and maintained by Red Hat.
    <br>Dependency Analytics only accesses your manifest files to analyze your application dependencies before
    displaying
    the vulnerability report.
<p>
    <b>IMPORTANT:</b>
    <br>Currently, Dependency Analytics only supports projects that use Maven (<code>mvn</code>), and Node ecosystems
    (<code>npm</code>).
    <br>In future releases, Red Hat plans to support other programming languages.
<p>

<h2>Quick Start</h2>
<p>
    <b>Prerequisites:</b>
<ul>
    <li>For Maven projects, analyzing a <code>pom.xml</code> file, you must have the <code>mvn</code> binary in your
        IDE's <code>PATH</code> environment.
    </li>
    <li>For Node projects, analyzing a <code>package.json</code> file, you must have the <code>npm</code> binary in your
        IDE's <code>PATH</code> environment.
    </li>
</ul>
<p>
    <b>Procedure</b>
<ol>
    <li>Install <a href="https://www.jetbrains.com/idea/download/" rel="noopener noreferrer" target="_blank">IntelliJ
        IDEA</a> on your workstation.
    </li>
    <li>After the installation finishes, open the IntelliJ IDEA application.</li>
    <li>From the menu, click <b>Settings</b>, and click <b>Plugins</b>.</li>
    <li>Search the <b>Marketplace</b> for <i>Red Hat Dependency Analytics</i>.</li>
    <li>Click the <b>INSTALL</b> button to install the plugin.</li>
    <li>To start scanning your application for security vulnerabilities, and view the vulnerability report, you can do
        one of the following:
        <ul>
            <li>Open a manifest file, hover over a dependency marked by the inline Component Analysis, indicated by the wavy-red
                line under a dependency, and click <b>Detailed Vulnerability Report</b>.
            </li>
            <li>Right click on a manifest file in the <b>Project</b> window, and click <b>Dependency Analytics
                Report</b>.
            </li>
        </ul>
    </li>
    <li>(OPTIONAL) You can link your Snyk account to Dependency Analytics by doing the following:
        <ol>
            <li>Log into your <a
                    href="https://app.snyk.io/login?utm_campaign=Code-Ready-Analytics-2020&utm_source=code_ready&code_ready=FF1B53D9-57BE-4613-96D7-1D06066C38C9"
                    rel="noopener noreferrer" target="_blank">Snyk
                account</a>.
            </li>
            <li>On the account landing page, you can find your Snyk Token, copy the token.</li>
            <li>Set the Snyk token as the value of your IDE's <code>EXHORT_SNYK_TOKEN</code> environment.</li>
            <li>After adding your Snyk token, the vulnerability report gives you detailed information about security
                vulnerabilities unique to Snyk, and vulnerabilities that have publicly known exploits.
            </li>
        </ol>
    </li>
</ol>
<p>

<h2>Configuration</h2>
<p>
    The Red Hat Dependency Analytics plugin has some configurable parameters that allows you to customize its behavior according to your preferences.
<p>
    <b>Procedure</b>
<ol>
    <li>Open the IntelliJ IDEA application.</li>
    <li>Click <b>Settings</b> from the menu, and click <b>Tools</b>.</li>
    <li>Click the <b>Red Hat Dependency Analytics</b>.</li>
</ol>
    <img src="https://raw.githubusercontent.com/redhat-developer/intellij-dependency-analytics/main/src/main/resources/images/settings.png"
     alt="Red Hat Dependency Analytics plugin settings">
<p>
    <b>Configurable parameters</b>
<ul>
    <li>
        <b>Maven</b>:
        <br>Path of the <code>mvn</code> executable allows Exhort to locate and execute the <code>mvn</code> commands to resolve dependencies forMaven projects.
        <br>Path of the <code>JAVA_HOME</code> directory is required by the <code>mvn</code> executable.
        <br>If the paths are not provided, your IDE's <code>PATH</code> and <code>JAVA_HONE</code> environments will be used to locate the executables.
    </li>
    <li>
        <b>Npm</b>:
        <br>Path of the <code>npm</code> executable allows Exhort to locate and execute <code>npm</code> commands to resolve dependencies for Node projects.
        <br>Path of the directory containing the <code>node</code> executable is required by the <code>npm</code> executable.
        <br>If the paths are not provided, your IDE's <code>PATH</code> environment will be used to locate the executables.
    </li>
    <li>
        <b>Exhort Snyk Token</b>:
        <br>The Snyk token allows Exhort to authenticate with the Snyk Vulnerability Database.
        <br>If a Snyk token is not provided, Snyk vulnerability information is not displayed.
    </li>
</ul>
<p>

<h2>Features</h2>
<p>
<ul>
    <li>
        <b>Component analysis</b>
        <br>Upon opening a manifest file, such as a <code>pom.xml</code> or <code>package.json</code> file, a scan
        starts the analysis
        process.
        <br>The scan provides immediate inline feedback on detected security vulnerabilities for your application's
        dependencies.
        <br>Such dependencies are appropriately underlined in red, and hovering over it gives you a short summary of
        the security concern.
        <br>The summary has the full package name, version number, the amount of known security vulnerabilities, and the
        highest severity status of said vulnerabilities.
        <img src="https://raw.githubusercontent.com/redhat-developer/intellij-dependency-analytics/main/src/main/resources/images/component-analysis.gif"
             alt="Animated screenshot showing the inline reporting feature of Dependency Analytics">
    </li>
    <li>
        <b>Excluding dependencies with <code>exhortignore</code></b>
        <br>You can exclude a package from analysis by marking the package for exclusion.
        <br>If you wish to ignore vulnerabilities for a dependency in a <code>pom.xml</code> file, you must add <code>exhortignore</code>
        as a comment against the dependency, group id, artifact id, or version scopes of that particular dependency in
        the manifest file.
        <br>For example:
        <code>
            <br>&lt;dependency&gt; &lt;!--exhortignore--&gt;
            <br>&nbsp;&nbsp;&lt;groupId&gt;...&lt;/groupId&gt;
            <br>&nbsp;&nbsp;&lt;artifactId&gt;...&lt;/artifactId&gt;
            <br>&nbsp;&nbsp;&lt;version&gt;...&lt;/version&gt;
            <br>&lt;/dependency&gt;
        </code>
        <br>If you wish to ignore vulnerabilities for a dependency in a <code>package.json</code> file, you must add
        <code>exhortignore</code> as a attribute-value pair.
        <br>If <code>exhortignore</code>is followed by a list of comma-separated Snyk vulnerability IDs, only the listed
        vulnerabilities will be ignored during analysis.
        <br>For example:
        <code>
            <br>{
            <br>&nbsp;&nbsp;"name": "sample",
            <br>&nbsp;&nbsp;"version": "1.0.0",
            <br>&nbsp;&nbsp;"description": "",
            <br>&nbsp;&nbsp;"main": "index.js",
            <br>&nbsp;&nbsp;"keywords": [],
            <br>&nbsp;&nbsp;"author": "",
            <br>&nbsp;&nbsp;"license": "ISC",
            <br>&nbsp;&nbsp;"dependencies": {
            <br>&nbsp;&nbsp;&nbsp;&nbsp;"dotenv": "^8.2.0",
            <br>&nbsp;&nbsp;&nbsp;&nbsp;"express": "^4.17.1",
            <br>&nbsp;&nbsp;&nbsp;&nbsp;"jsonwebtoken": "^8.5.1",
            <br>&nbsp;&nbsp;&nbsp;&nbsp;"mongoose": "^5.9.18"
            <br>&nbsp;&nbsp;},
            <br>&nbsp;&nbsp;"exhortignore": [
            <br>&nbsp;&nbsp;&nbsp;&nbsp;"jsonwebtoken"
            <br>&nbsp;&nbsp;]
            <br>}
        </code>
    </li>
    <li>
        <b>Excluding developmental or test dependencies</b>
        <br>Red Hat Dependency Analytics does not analyze dependencies marked as <code>dev</code> or <code>test</code>,
        these dependencies are ignored.
        <br>For example, setting <code>test</code> in the <code>scope</code> tag within a <code>pom.xml</code> file:
        <code>
            <br>&lt;dependency&gt;
            <br>&nbsp;&nbsp;&lt;groupId&gt;...&lt;/groupId&gt;
            <br>&nbsp;&nbsp;&lt;artifactId&gt;...&lt;/artifactId&gt;
            <br>&nbsp;&nbsp;&lt;version&gt;...&lt;/version&gt;
            <br>&nbsp;&nbsp;&lt;scope&gt;test&lt;/scope&gt;
            <br>&lt;/dependency&gt;
        </code>
        <br>For example, setting <code>devDependencies</code> attributte in the <code>package.json</code> file:
        <code>
            <br>{
            <br>&nbsp;&nbsp;"name": "sample",
            <br>&nbsp;&nbsp;"version": "1.0.0",
            <br>&nbsp;&nbsp;"description": "",
            <br>&nbsp;&nbsp;"main": "index.js",
            <br>&nbsp;&nbsp;"keywords": [],
            <br>&nbsp;&nbsp;"author": "",
            <br>&nbsp;&nbsp;"license": "ISC",
            <br>&nbsp;&nbsp;"dependencies": {
            <br>&nbsp;&nbsp;&nbsp;&nbsp;"dotenv": "^8.2.0",
            <br>&nbsp;&nbsp;&nbsp;&nbsp;"express": "^4.17.1",
            <br>&nbsp;&nbsp;&nbsp;&nbsp;"jsonwebtoken": "^8.5.1",
            <br>&nbsp;&nbsp;&nbsp;&nbsp;"mongoose": "^5.9.18"
            <br>&nbsp;&nbsp;},
            <br>&nbsp;&nbsp;"devDependencies": {
            <br>&nbsp;&nbsp;&nbsp;&nbsp;"axios": "^0.19.0"
            <br>&nbsp;&nbsp;}
            <br>}
        </code>
    </li>
    <li>
        <b>Red Hat Dependency Analytics Report</b>
        <br>The Red Hat Dependency Analytics Report is a temporary HTML file that exists if the <b>Red Hat Dependency
        Analytics Report</b> tab remains open.
        <br>Closing the tab removes the temporary HTML file.
    </li>
</ul>
<p>

<h2>Know more about the Red Hat Dependency Analytics platform</h2>
<p>
    The goal of this project is to significantly enhance a developer's experience by providing helpful vulnerability
    insights for their applications.
<ul>
    <li><a href="https://github.com/redhat-developer/intellij-dependency-analytics" rel="noopener noreferrer"
           target="_blank">GitHub Repository</a></li>
</ul>
<p>

<h2>Data and telemetry</h2>
<p>
    The Red Hat Dependency Analytics plugin for IntellJ IDEA collects anonymous <a
        href="https://github.com/redhat-developer/intellij-dependency-analytics/blob/main/USAGE_DATA.md"
        rel="noopener noreferrer" target="_blank">usage data</a> and sends it to Red Hat servers to help improve our
    products and services.
    <br>Read our <a href="https://developers.redhat.com/article/tool-data-collection"
                    rel="noopener noreferrer" target="_blank">privacy statement</a> to learn more.
    <br>This plugin respects the settings of the <code>Telemetry by Red Hat</code> plugin, which you can learn more
    about <a href="https://plugins.jetbrains.com/plugin/16209-telemetry-by-red-hat"
             rel="noopener noreferrer" target="_blank">here</a>.
<p>

<h2>Support, feedback & questions</h2>
<p>
    There are two ways you can contact us:
<ul>
    <li>You can reach out to us at <code>rhda-support@redhat.com</code> with any questions, feedback, and general
        support.
    </li>
    <li>You can also file a <a href="https://github.com/redhat-developer/intellij-dependency-analytics/issues"
                               rel="noopener noreferrer" target="_blank">GitHub Issue</a>.
    </li>
</ul>

<h2>License</h2>
<p>
    EPL-2.0, See <a href="https://github.com/redhat-developer/intellij-dependency-analytics/blob/main/LICENSE"
                    rel="noopener noreferrer" target="_blank">LICENSE</a> for more information.

  ]]></description>

    <change-notes><![CDATA[
  <p><b>0.7.0</b></p>
  <p>Initial release for the new Red Hat Dependency Analytics service.</p>
  <p>Based on exhort-java-api.</p>
  <p>Perform analysis with the new Red Hat Dependency Analytics backend.</p>
  <p>Support for Python and Golang is temporarily disabled, and will be re-enabled later.</p>
  <p><b>0.6.0</b></p>
  <p>Various dependency bumps.</p>
  <p>Various maintenance resolutions.</p>
  <p>Bump Java 8 to Java 11.</p>
  <p>Fix break introduced with 2022.3.</p>
  <p><b>0.5.0</b></p>
  <p>Analysis report generation fixes.</p>
  <p><b>0.4.0</b></p>
  <p>Security fixes.</p>
  <p>Fix NPE when opening editor.</p>
  <p><b>0.3.0</b></p>
  <p>Stack Analysis capability is implemented to see detailed analysis of stack.</p>
  <p>Support for Golang dependencies in Component Analysis.</p>
  <p><b>0.2.0</b></p>
  <p>Latest ca-lsp-server is now automatically downloaded</p>
  <p>Opt-in telemetry</p>
  <p><b>0.1.1</b></p>
  <p>Based on ca-lsp-server v0.4.20</p>
  <p><b>0.0.4</b></p>
  <p>Based on ca-lsp-server v0.2.2</p>
  <p><b>0.0.3</b></p>
  <p>Bug fixes</p>
  <ul>
    <li><a href="https://github.com/redhat-developer/intellij-dependency-analytics/issues/3">Files not analyzed at startup</a></li>
  </ul>
  <p><b>0.0.2</b></p>
  <p>Based on ca-lsp-server v0.1.56</p>
  <p><b>0.0.1</b></p>
  <p>Initial release</p>
  ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="211.0"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>
    <depends>com.redhat.devtools.intellij.telemetry</depends>
    <depends config-file="go.xml" optional="true">org.jetbrains.plugins.go</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileEditorProvider implementation="org.jboss.tools.intellij.stackanalysis.SaReportEditorProvider"/>
        <editorTabTitleProvider implementation="org.jboss.tools.intellij.stackanalysis.SaEditorTabTitleProvider"
                                order="first"/>

        <applicationConfigurable
                parentId="tools"
                instance="org.jboss.tools.intellij.settings.ApiSettingsConfigurable"
                id="org.jboss.tools.intellij.settings.ApiSettingsConfigurable"
                displayName="Red Hat Dependency Analytics"/>

        <localInspection language="XML" shortName="MavenCAInspection"
                         displayName="Red Hat Dependency Analytics component analysis"
                         groupName="Maven" enabledByDefault="true" level="ERROR"
                         implementationClass="org.jboss.tools.intellij.componentanalysis.maven.MavenCAInspection"/>
        <externalAnnotator language="XML"
                           implementationClass="org.jboss.tools.intellij.componentanalysis.maven.MavenCAAnnotator"/>

        <localInspection language="JSON" shortName="NpmCAInspection"
                         displayName="Red Hat Dependency Analytics component analysis"
                         groupPath="JavaScript and TypeScript" groupName="Imports and dependencies"
                         enabledByDefault="true" level="ERROR"
                         implementationClass="org.jboss.tools.intellij.componentanalysis.npm.NpmCAInspection"/>
        <externalAnnotator language="JSON"
                           implementationClass="org.jboss.tools.intellij.componentanalysis.npm.NpmCAAnnotator"/>
    </extensions>

    <!-- Action for running SA added in Editor window, Navigation Bar and Project View-->
    <actions>
        <group>
            <action id="saAnalysis" text="Dependency Analytics Report"
                    class="org.jboss.tools.intellij.stackanalysis.SaAction"
                    icon="/images/report-icon.png"/>

            <separator/>

            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <add-to-group group-id="NavBarToolBar" anchor="first"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>
        </group>
    </actions>

</idea-plugin>
