<idea-plugin>
    <id>org.jboss.tools.intellij.analytics</id>
    <name>Dependency Analytics</name>
    <version>1.0</version>
    <vendor email="developers@redhat.com" url="https://www.redhat.com">Red-Hat</vendor>

    <description><![CDATA[
      <img src="https://raw.githubusercontent.com/redhat-developer/intellij-dependency-analytics/master/src/main/resources/images/trusted_content_icon.png" width="32" height="32"/>

      <h2>Overview</h2>
      <p>
      'Dependency Analytics is powered by <a href="https://snyk.io/product/vulnerability-database/" rel="noopener noreferrer" target="_blank">Snyk Intel Vulnerability DB</a>, it is the most advanced and accurate open source vulnerability database in the industry. That adds value with the latest, fastest and more number of vulnerabilities derived from numerous sources.
      <p>
      <p>'Dependency Analytics Report' with Insights about your application dependencies:<p>
      <ul>
        <li>Flags a security vulnerability(CVE) and suggests a remedial version.</li>
      </ul>
      <ul>
        <li>Shows Github popularity metrics along with latest version.</li>
      </ul>
      <ul>
        <li>Suggests a project level license, check for conflicts between dependency licences.</li>
      </ul>
      <ul>
        <li>AI based guidance for additional, alternative dependencies</li>
      </ul>
      <p>Disclaimer: Dependency Analytics does not analyse dev/test dependencies.<p>
      <h2>Supported Languages</h2>
      <p>
      	'Dependency Analytics' extension supports projects using Maven, projects build on npm (Node ecosystem), projects using Python and projects using Golang. Extending support for other languages is currently under progress.
      </p>

      <h2>Prerequisites</h2>
       <p>This plug-in assumes that you have installed all packages given in target manifest file which will be used to create transitive dependency for showing Stack Analysis, you also need to have following binaries on your IDE PATH:</p>
      <ul>
        <li><code>npm</code> (for analyzing Node applications and running the LSP server)</li>
        <li><code>mvn</code> (for analyzing Java applications)</li>
        <li><code>python</code> (for analyzing Python applications)</li>
        <li><code>go</code> (for analyzing Golang applications)</li>
      </ul>
      <p>Note: In this plug-in mvn/npm/go/python commands are executed using <code>ProcessBuilder</code>, which requires that binaries for thse are found in your IDE Environment PATH.</p>

      <h2>Quick Start</h2>
      <ul>
        <li>Install the extension.</li>
        <li>Opening or editing a manifest file (<code>pom.xml</code> / <code>package.json</code> / <code>requirements.txt</code> / <code>go.mod</code>) scans your application for security vulnerabilities.</li>
        <li>Opening or editing a manifest file (pom.xml / package.json / requirements.txt / go.mod) scans your application for security vulnerabilities.</li>
        <li>Click on icon from 'Navigation bar' or right click on a manifest file (pom.xml/package.json / requirements.txt / go.mod) in the 'File explorer' or 'File editor' to display 'Dependency Analytics Report' for your application.</li>
      </ul>

      <h2>Features</h2>
      <ul>
        <li>Opening or editing a manifest file (`pom.xml` / `package.json` / `requirements.txt` / `go.mod`) scans your application for security vulnerabilities, flag them along with 'quick fixes'.</li>
      </ul>
      <p>
        <img src="https://raw.githubusercontent.com/redhat-developer/intellij-dependency-analytics/master/src/main/resources/images/demo.gif" alt="Demo">
      </p>
      <ul>
      	<li>Right click on a manifest file(`pom.xml` / `package.json` / `requirements.txt` / `go.mod`) and choose 'Dependency Analytics Report ...' OR click on <img src="https://raw.githubusercontent.com/redhat-developer/intellij-dependency-analytics/master/src/main/resources/images/report-icon.png" alt="Icon"> icon in navigation bar to display 'Dependency Analytics' report as shown below. This report covers deeper insights into your application dependencies:
      	<p>- Flags a security vulnerability(CVE) and suggests a remedial version</p>
      	<p>- Shows Github popularity metrics along with latest version</p>
      	<p>- Suggests a project level license, check for conflicts between dependency licences</p>
      	<p>- AI based guidance for additional,alternative dependencies</p>
     	</li>
     </ul>
     <p><img src="https://raw.githubusercontent.com/redhat-developer/intellij-dependency-analytics/master/src/main/resources/images/stack-analysis.gif" alt="Stack Analysis"></p>

     <h2 id="user-content-know-more-about-dependency-analytics-platform" class="link-header">Know more about Dependency Analytics Platform</h2>
     <p>
       The mission of this project is to significantly enhance developer experience:
       providing Insights (security, licenses, AI based guidance) for applications and helping developers, Enterprises.
     </p>
     <ul>
       <li><a href="https://github.com/redhat-developer/intellij-dependency-analytics" rel="noopener noreferrer" target="_blank">GitHub repository</a></li>
     </ul>

     <h2 id="user-content-feedback-%26-questions" class="link-header">Feedback &amp; Questions</h2>
     <ul>
       <li>File a bug in <a href="https://github.com/redhat-developer/intellij-dependency-analytics/issues" rel="noopener noreferrer" target="_blank">GitHub Issues</a></li>
     </ul>

     <h2 id="user-content-license" class="link-header">License</h2>
     <p>
       EPL-2.0, See <a href="https://github.com/redhat-developer/intellij-dependency-analytics/blob/master/LICENSE" rel="noopener noreferrer" target="_blank">LICENSE</a>
       for more information.
     </p>
  ]]></description>

    <change-notes><![CDATA[
  <p><b>0.6.0</b></p>
  <p>Various dependency bumps.</p>
  <p>Various maintenance resolutions.</p>
  <p>Bump Java 8 to Java 11.</p>
  <p>Fix break introduced with 2022.3.</p>
  <p><b>0.5.0</b></p>
  <p>Analysis report generation fixes.</p>
  <p><b>0.4.0</b></p>
  <p>Security fixes.</p>
  <p>Fix NPE when opening editor.</p>
  <p><b>0.3.0</b></p>
  <p>Stack Analysis capability is implemented to see detailed analysis of stack.</p>
  <p>Support for Golang dependencies in Component Analysis.</p>
  <p><b>0.2.0</b></p>
  <p>Latest ca-lsp-server is now automatically downloaded</p>
  <p>Opt-in telemetry</p>
  <p><b>0.1.1</b></p>
  <p>Based on ca-lsp-server v0.4.20</p>
  <p><b>0.0.4</b></p>
  <p>Based on ca-lsp-server v0.2.2</p>
  <p><b>0.0.3</b></p>
  <p>Bug fixes</p>
  <ul>
    <li><a href="https://github.com/redhat-developer/intellij-dependency-analytics/issues/3">Files not analyzed at startup</a></li>
  </ul>
  <p><b>0.0.2</b></p>
  <p>Based on ca-lsp-server v0.1.56</p>
  <p><b>0.0.1</b></p>
  <p>Initial release</p>
  ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="211.0"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <depends>com.intellij.modules.lang</depends>
    <depends>com.redhat.devtools.intellij.telemetry</depends>
    <depends>org.jetbrains.idea.maven</depends>

    <extensions defaultExtensionNs="com.intellij">
        <fileType name="pom" implementationClass="org.jboss.tools.intellij.componentanalysis.maven.POMFileType"
                  fileNames="pom.xml"/>
        <localInspection language="XML" shortName="MavenCAInspection" displayName="Exhort component analysis"
                         groupName="Maven" enabledByDefault="true" level="ERROR"
                         implementationClass="org.jboss.tools.intellij.componentanalysis.maven.MavenCAInspection"/>
        <externalAnnotator language="XML"
                           implementationClass="org.jboss.tools.intellij.componentanalysis.maven.MavenCAAnnotator"/>

        <fileType name="package" implementationClass="org.jboss.tools.intellij.componentanalysis.npm.PackageFileType"
                  fileNames="package.json"/>
        <localInspection language="JSON" shortName="NpmCAInspection" displayName="Exhort component analysis"
                         groupPath="Javascript and Typescript" groupName="npm" enabledByDefault="true" level="ERROR"
                         implementationClass="org.jboss.tools.intellij.componentanalysis.npm.NpmCAInspection"/>
        <externalAnnotator language="JSON"
                           implementationClass="org.jboss.tools.intellij.componentanalysis.npm.NpmCAAnnotator"/>

        <fileEditorProvider implementation="org.jboss.tools.intellij.stackanalysis.SaReportEditorProvider"/>
        <editorTabTitleProvider implementation="org.jboss.tools.intellij.stackanalysis.SaEditorTabTitleProvider"
                                order="first"/>

        <applicationConfigurable
                parentId="tools"
                instance="org.jboss.tools.intellij.settings.ApiSettingsConfigurable"
                id="org.jboss.tools.intellij.settings.ApiSettingsConfigurable"
                displayName="Red Hat Dependency Analytics"/>
    </extensions>

    <!-- Action for running SA added in Editor window, Navigation Bar and Project View-->
    <actions>
        <group>
            <action id="saAnalysis" text="Dependency Analytics Report"
                    class="org.jboss.tools.intellij.stackanalysis.SaAction"
                    icon="/images/report-icon.png"/>

            <separator/>

            <add-to-group group-id="EditorPopupMenu" anchor="first"/>
            <add-to-group group-id="NavBarToolBar" anchor="first"/>
            <add-to-group group-id="ProjectViewPopupMenu" anchor="first"/>
        </group>
    </actions>

</idea-plugin>
